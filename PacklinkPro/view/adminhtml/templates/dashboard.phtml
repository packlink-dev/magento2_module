<?php
/**
 * @package    Packlink_PacklinkPro
 * @author     Packlink Shipping S.L.
 * @copyright  2022 Packlink
 */

/** @var Packlink\PacklinkPro\Block\Adminhtml\Content\Dashboard $block */
?>

<div id="pl-page">
    <header id="pl-main-header">
        <div class="pl-main-logo">
            <img src="https://cdn.packlink.com/apps/giger/logos/packlink-pro.svg" alt="logo">
        </div>
        <div class="pl-header-holder" id="pl-header-section"></div>
    </header>

    <main id="pl-main-page-holder"></main>

    <div class="pl-spinner pl-hidden" id="pl-spinner">
        <div></div>
    </div>

    <template id="pl-alert">
        <div class="pl-alert-wrapper">
            <div class="pl-alert">
                <span class="pl-alert-text"></span>
                <i class="material-icons">close</i>
            </div>
        </div>
    </template>

    <template id="pl-modal">
        <div id="pl-modal-mask" class="pl-modal-mask pl-hidden">
            <div class="pl-modal">
                <div class="pl-modal-close-button">
                    <i class="material-icons">close</i>
                </div>
                <div class="pl-modal-title">

                </div>
                <div class="pl-modal-body">

                </div>
                <div class="pl-modal-footer">
                </div>
            </div>
        </div>
    </template>

    <template id="pl-error-template">
        <div class="pl-error-message" data-pl-element="error">
        </div>
    </template>
</div>

<script src="<?php echo $block->getViewFileUrl('Packlink_PacklinkPro::packlink/js/GridResizerService.js'); ?>"></script>
<link href="https://fonts.googleapis.com/icon?family=Material+Icons+Outlined"
      rel="stylesheet"/>
<script>
    document.addEventListener('DOMContentLoaded', function () {
            let ajaxService = Packlink.ajaxService,
                stateControllerUrl = "<?php echo $block->getControllerUrl('ModuleState', 'getCurrentState'); ?>",
                baseResourcesUrl = "<?php echo $block->getViewFileUrl('Packlink_PacklinkPro::packlink'); ?>",
                // URLs for AJAX actions have to be loaded here
                // if URLs are loaded from backend all form keys will not be generated correctly
                // and all AJAX requests will fail
                configuration = {
                    'login': {
                        'submit': "<?php echo $block->getControllerUrl('Login', 'login'); ?>",
                        'listOfCountriesUrl': "<?php echo $block->getControllerUrl('RegistrationRegions', 'getRegions'); ?>",
                        'logoPath': '',
                    },
                    'register': {
                        'getRegistrationData': "<?php echo $block->getControllerUrl('Registration', 'getRegisterData'); ?>",
                        'submit': "<?php echo $block->getControllerUrl('Registration', 'register')?>",
                    },
                    'onboarding-state': {
                        'getState': "<?php echo $block->getControllerUrl('Onboarding', 'getCurrentState'); ?>",
                    },
                    'onboarding-welcome': {},
                    'onboarding-overview': {
                        'defaultParcelGet': "<?php echo $block->getControllerUrl('DefaultParcel', 'getDefaultParcel'); ?>",
                        'defaultWarehouseGet': "<?php echo $block->getControllerUrl('DefaultWarehouse', 'getDefaultWarehouse'); ?>",
                    },
                    'default-parcel': {
                        'getUrl': "<?php echo $block->getControllerUrl('DefaultParcel', 'getDefaultParcel'); ?>",
                        'submitUrl': "<?php echo $block->getControllerUrl('DefaultParcel', 'setDefaultParcel'); ?>",
                    },
                    'default-warehouse': {
                        'getUrl': "<?php echo $block->getControllerUrl('DefaultWarehouse', 'getDefaultWarehouse'); ?>",
                        'getSupportedCountriesUrl': "<?php echo $block->getControllerUrl('DefaultWarehouse', 'getSupportedCountries'); ?>",
                        'submitUrl': "<?php echo $block->getControllerUrl('DefaultWarehouse', 'setDefaultWarehouse'); ?>",
                        'searchPostalCodesUrl': "<?php echo $block->getControllerUrl('DefaultWarehouse', 'searchPostalCodes'); ?>",
                    },
                    'configuration': {
                        'getDataUrl': "<?php echo $block->getControllerUrl('Configuration', 'getData'); ?>",
                    },
                    'system-info': {
                        'getStatusUrl': "<?php echo $block->getControllerUrl('Debug', 'getStatus'); ?>",
                        'setStatusUrl': "<?php echo $block->getControllerUrl('Debug', 'setStatus'); ?>",
                    },
                    'order-status-mapping': {
                        'getMappingAndStatusesUrl': "<?php echo $block->getControllerUrl('OrderStateMapping', 'getMappingsAndStatuses'); ?>",
                        'setUrl': "<?php echo $block->getControllerUrl('OrderStateMapping', 'setMappings'); ?>",
                    },
                    'my-shipping-services': {
                        'getServicesUrl': "<?php echo $block->getControllerUrl('ShippingMethods', 'getActive'); ?>",
                        'deleteServiceUrl': "<?php echo $block->getControllerUrl('ShippingMethods', 'deactivate'); ?>",
                        'getCurrencyDetailsUrl': "<?php echo $block->getControllerUrl('SystemInfo', 'get'); ?>",
                        'systemId': "<?php echo $block->getCurrentStoreId(); ?>",
                    },
                    'pick-shipping-service': {
                        'getActiveServicesUrl': "<?php echo $block->getControllerUrl('ShippingMethods', 'getActive'); ?>",
                        'getServicesUrl': "<?php echo $block->getControllerUrl('ShippingMethods', 'getInactive'); ?>",
                        'getTaskStatusUrl': "<?php echo $block->getControllerUrl('ShippingMethods', 'getTaskStatus'); ?>",
                        'startAutoConfigureUrl': "<?php echo $block->getControllerUrl('AutoConfigure', 'start'); ?>",
                        'disableCarriersUrl':
                            '',
                        'getCurrencyDetailsUrl': "<?php echo $block->getControllerUrl('SystemInfo', 'get'); ?>",
                        'systemId': "<?php echo $block->getCurrentStoreId(); ?>",
                        'enqueue': "<?php echo $block->getControllerUrl('ManualRefresh', 'refresh'); ?>",
                        'getTaskStatus': "<?php echo $block->getControllerUrl('ManualRefresh', 'getTaskStatus'); ?>"
                    },
                    'edit-service': {
                        'getServiceUrl': "<?php echo $block->getControllerUrl('ShippingMethods', 'getShippingMethod'); ?>",
                        'saveServiceUrl': "<?php echo $block->getControllerUrl('ShippingMethods', 'save'); ?>",
                        'getTaxClassesUrl': '',
                        'getCountriesListUrl': "<?php echo $block->getControllerUrl('ShippingCountries', 'getAll'); ?>",
                        'getCurrencyDetailsUrl': "<?php echo $block->getControllerUrl('SystemInfo', 'get'); ?>",
                        'hasTaxConfiguration': false,
                        'hasCountryConfiguration': true,
                        'canDisplayCarrierLogos': true,
                    }
                };

            ajaxService.get(
                "<?php echo $block->getUrlHelper()->getBackendUrl(
                    'packlink/content/dashboard',
                    ['action' => 'getTranslations']
                ); ?>",
                function (response) {
                    Packlink.translations = {
                        default: response['default'],
                        current: response['current']
                    };
                }
            );


            ajaxService.get(
                "<?php echo $block->getUrlHelper()->getBackendUrl(
                    'packlink/content/dashboard',
                    ['action' => 'getTemplates']
                ); ?>",
                function (response) {
                    Packlink.state = new Packlink.StateController(
                        {
                            baseResourcesUrl: baseResourcesUrl,
                            stateUrl: stateControllerUrl,
                            pageConfiguration: configuration,
                            templates: response
                        }
                    );

                    Packlink.state.display();

                    calculateContentHeight();
                }
            );

            /**
             * Calculates content height.
             */
            function calculateContentHeight() {
                let content = document.getElementById('pl-main-page-holder');
                let localOffset = content.offsetTop + 20 + 35; // negative margin and footer bar

                let body = document.getElementsByTagName('body')[0];
                content.style.height = body.clientHeight - localOffset + 'px';

                setTimeout(calculateContentHeight, 250);
            }
        },
        false
    );
</script>
